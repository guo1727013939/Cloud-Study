server:
  port: 10010

spring:
  application:
    name: gateway
  cloud:
    nacos:
      server-address: nacos:8848
    gateway:
      routes:
        - id: user-service # 路由标识，必须唯一
          uri: lb://userservice  # 路由的目标地址
          predicates: # 路由断言，判断请求是否规则  tinggon
            - Path=/user/**
        - id: order-service
          uri: lb://orderservice
          predicates:
            - Path=/order/**
#            - Before=2023-01-01T00:00:00Z
            - After=2023-01-01T00:00:00Z
#          filters:
#            - AddRequestHeader=Truth, Itcast is freaking aowsome!
      defaultFilters:
        - AddRequestHeader=Truth, Itcast is freaking aowsome! 1
#        - AddRequestHeader=Truth, Itcast is freaking aowsome! 2
#        - AddRequestHeader=Truth, Itcast is freaking aowsome! 3
#        - AddRequestHeader=Truth, Itcast is freaking aowsome! 4
#过滤器链执行顺序：
#每个过滤器的都必须指定一个int类型的order值，order越小，优先级越高，执行顺序越靠前
# GlobalFilter通过Ordered接口，或者添加@Order注解来指定order值，由我们自己指定
# 路由过滤器和defaultFilter的order由Spring指定，默认是按照声明顺序从1递增
# 当过滤器的order值一样时，会按照先执行defaultFilter > 路由过滤器 > GlobalFilter过滤器的顺序执行。


# 跨域请求
# 域名不同：www.taobao.com 和 www.taobao.org
# 域名相同，端口不同 localhost:8080 和 localhost:8081
# 跨域问题：浏览器禁止请求发起者与服务端发生跨域Ajax请求，请求被浏览器拦截的问题
# 解决方案： CORS 配置文件解决跨域问题
#      globalcors: #全局的跨域处理
#        add-to-simple-url-handler-mapping: true #解决option请求拦截问题，开启向浏览器询问的操作
#        corsConfigurations:
#          '[/**]':
#            allowedOrigins: # 允许哪些网站的跨域请求
#              - "http://localhost:8090"
#              - "http://www.leyou.com"
#            allowedMethods: # 允许的跨域ajax的请求方式
#              - "GET"
#              - "POST"
#              - "DELETE"
#              - "PUT"
#              - "OPTIONS"
#            allowedHeaders: "*" # 允许在请求中携带的头信息
#            allowCredentials: true # 是否允许携带cookie
#            maxAge: 360000 # 这次跨域检测的有效期